# set variables
SET(Metis_FOUND FALSE)
SET(Metis_LIBRARIES)
SET(Metis_INCLUDE_DIR)

MESSAGE(STATUS "Searching for Metis library ...")
# check if MUMPS_ROOT is set
IF(NOT METIS_ROOT AND NOT $ENV{METIS_ROOT} STREQUAL "")
  SET(METIS_ROOT $ENV{METIS_ROOT})
ENDIF(NOT METIS_ROOT AND NOT $ENV{METIS_ROOT} STREQUAL "")

# convert path to unix style path and set search path
IF(METIS_ROOT)
  FILE(TO_CMAKE_PATH ${METIS_ROOT} METIS_ROOT)
  SET(_metis_INCLUDE_SEARCH_DIRS ${METIS_ROOT}/include ${METIS_ROOT} ${_metis_INCLUDE_SEARCH_DIRS})
  SET(_metis_LIBRARIES_SEARCH_DIRS ${METIS_ROOT}/lib ${METIS_ROOT} ${_metis_LIBRARIES_SEARCH_DIRS})
ENDIF(METIS_ROOT)

# search for header metis.h
FIND_PATH(Metis_INCLUDE_DIR NAMES metis.h PATH_SUFFIXES metis HINTS ${_metis_INCLUDE_SEARCH_DIRS})
IF(Metis_INCLUDE_DIR)
  IF(UNIX AND Metis_FIND_STATIC_LIBRARY)
     SET(Metis_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})
     SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
  ENDIF(UNIX AND Metis_FIND_STATIC_LIBRARY)
  FIND_LIBRARY(Metis_LIBRARIES NAMES metis HINTS ${_metis_LIBRARIES_SEARCH_DIRS})
  IF(Metis_LIBRARIES)
    MESSAGE(STATUS "Metis library found")
    SET(Metis_FOUND TRUE)
  ENDIF(Metis_LIBRARIES)
  IF(UNIX AND Metis_FIND_STATIC_LIBRARY)
     SET(CMAKE_FIND_LIBRARY_SUFFIXES ${Metis_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES})
  ENDIF(UNIX AND Metis_FIND_STATIC_LIBRARY)
ENDIF(Metis_INCLUDE_DIR)

# handle the QUIETLY and REQUIRED arguments
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(Metis DEFAULT_MSG Metis_LIBRARIES Metis_INCLUDE_DIR)
