<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wrap__postpro_8h" kind="file" language="C++">
    <compoundname>wrap_postpro.h</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="wrap__postpro_8h_1ad16306cc5147145e8872768cb1195445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void postpro_PostproDuringComputation</definition>
        <argsstring>(void)</argsstring>
        <name>postpro_PostproDuringComputation</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Scan postprocessing function which should be call during the computation process. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__postpro_8h_1ad16306cc5147145e8872768cb1195445" kindref="member">postpro_PostproDuringComputation()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" line="52" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" declline="52" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__postpro_8h_1a18aefe63edd9c5c1f448cc4679d1a48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void postpro_ReadCommands</definition>
        <argsstring>(void)</argsstring>
        <name>postpro_ReadCommands</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Scan postprocessing function which should be call during the computation process. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__postpro_8h_1a18aefe63edd9c5c1f448cc4679d1a48b" kindref="member">postpro_ReadCommands()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" line="62" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" declline="62" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__postpro_8h_1ac3a07b5c7ce1be2f61219c3cd9cedfb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void postpro_PostproBeforeComputation</definition>
        <argsstring>(int restart=0)</argsstring>
        <name>postpro_PostproBeforeComputation</name>
        <param>
          <type>int</type>
          <declname>restart</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Data initialization and scan postprocessing function which should be called before the computation process. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : postpro_PostproBeforeComputation(restart=0) param[in] restart (integer) : if the Postpro file must append to existing ones and starting index of CONTACT_FORCE_DISTRIBUTION files </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" line="79" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" declline="79" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__postpro_8h_1a355b8566b0d1b38562123cd4358380a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void postpro_FlushDuringComputation</definition>
        <argsstring>(void)</argsstring>
        <name>postpro_FlushDuringComputation</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Flush all postpro files. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__postpro_8h_1a355b8566b0d1b38562123cd4358380a1" kindref="member">postpro_FlushDuringComputation()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" line="89" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" declline="89" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__postpro_8h_1a2d801bf67030ef3a3e17848d7c42fb9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void postpro_ClosePostproFiles</definition>
        <argsstring>(void)</argsstring>
        <name>postpro_ClosePostproFiles</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Close all postpro files. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__postpro_8h_1a2d801bf67030ef3a3e17848d7c42fb9c" kindref="member">postpro_ClosePostproFiles()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" line="99" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" declline="99" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__postpro_8h_1a862d6033def96f6af157b29bb2909dbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void postpro_SetCircularSelectionZone</definition>
        <argsstring>(double rvalue1, double rvalue2, double rvalue3)</argsstring>
        <name>postpro_SetCircularSelectionZone</name>
        <param>
          <type>double</type>
          <declname>rvalue1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rvalue2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rvalue3</declname>
        </param>
        <briefdescription>
<para>Initialize data for postreatment using a circular selection. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : postpro_SetCircularSelectionZone(rvalue1, rvalu2, rvalue3) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rvalue1</parametername>
</parameternamelist>
<parameterdescription>
<para>(double) : X coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rvalue2</parametername>
</parameternamelist>
<parameterdescription>
<para>(double) : Y coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rvalue3</parametername>
</parameternamelist>
<parameterdescription>
<para>(double) : radius selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" line="118" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" declline="118" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__postpro_8h_1a9b78c3815ccbabee53a58c523d175c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void postpro_MoveCircularSelectionZone</definition>
        <argsstring>(double rvalue1, double rvalue2)</argsstring>
        <name>postpro_MoveCircularSelectionZone</name>
        <param>
          <type>double</type>
          <declname>rvalue1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rvalue2</declname>
        </param>
        <briefdescription>
<para>Increment the position of the circular selection defined with CIRCULAR_SELECTION. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : postpro_MoveCircularSelectionZone(rvalue1, rvalu2) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rvalue1</parametername>
</parameternamelist>
<parameterdescription>
<para>(double) : X translational velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rvalue2</parametername>
</parameternamelist>
<parameterdescription>
<para>(double) : Y translational velocity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" line="135" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" declline="135" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__postpro_8h_1a31b248628fbfb27b96a902a87c0de4d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void postpro_CleanMemory</definition>
        <argsstring>(void)</argsstring>
        <name>postpro_CleanMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Free all memory allocated within postpro module. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__postpro_8h_1a31b248628fbfb27b96a902a87c0de4d1" kindref="member">postpro_CleanMemory()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" line="145" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" declline="145" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__postpro_8h_1a4174aa4153bb72fabeb62a54cdb4da20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double postpro_2D_GetKineticEnergy</definition>
        <argsstring>(void)</argsstring>
        <name>postpro_2D_GetKineticEnergy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Compute Kinetic Energy for all bodies (rigids and defo) </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : KE = <ref refid="wrap__postpro_8h_1a4174aa4153bb72fabeb62a54cdb4da20" kindref="member">postpro_2D_GetKineticEnergy()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" line="156" column="20" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h" declline="156" declcolumn="20"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*==========================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2000-2025<sp/>CNRS-UM.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>a<sp/>software<sp/>(LMGC90)<sp/>which<sp/>is<sp/>a<sp/>computer<sp/>program<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>which<sp/>purpose<sp/>is<sp/>to<sp/>modelize<sp/>interaction<sp/>problems<sp/>(contact,<sp/>multi-Physics,etc).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>CeCILL<sp/>license<sp/>under<sp/>French<sp/>law<sp/>and</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>abiding<sp/>by<sp/>the<sp/>rules<sp/>of<sp/>distribution<sp/>of<sp/>free<sp/>software.<sp/><sp/>You<sp/>can<sp/><sp/>use,<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>and/<sp/>or<sp/>redistribute<sp/>the<sp/>software<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>CeCILL</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>license<sp/>as<sp/>circulated<sp/>by<sp/>CEA,<sp/>CNRS<sp/>and<sp/>INRIA<sp/>at<sp/>the<sp/>following<sp/>URL</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>&quot;http://www.cecill.info&quot;.<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>As<sp/>a<sp/>counterpart<sp/>to<sp/>the<sp/>access<sp/>to<sp/>the<sp/>source<sp/>code<sp/>and<sp/><sp/>rights<sp/>to<sp/>copy,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>modify<sp/>and<sp/>redistribute<sp/>granted<sp/>by<sp/>the<sp/>license,<sp/>users<sp/>are<sp/>provided<sp/>only</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>with<sp/>a<sp/>limited<sp/>warranty<sp/><sp/>and<sp/>the<sp/>software&apos;s<sp/>author,<sp/><sp/>the<sp/>holder<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>economic<sp/>rights,<sp/><sp/>and<sp/>the<sp/>successive<sp/>licensors<sp/><sp/>have<sp/>only<sp/><sp/>limited</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>liability.<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>respect,<sp/>the<sp/>user&apos;s<sp/>attention<sp/>is<sp/>drawn<sp/>to<sp/>the<sp/>risks<sp/>associated</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>with<sp/>loading,<sp/><sp/>using,<sp/><sp/>modifying<sp/>and/or<sp/>developing<sp/>or<sp/>reproducing<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>software<sp/>by<sp/>the<sp/>user<sp/>in<sp/>light<sp/>of<sp/>its<sp/>specific<sp/>status<sp/>of<sp/>free<sp/>software,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>that<sp/>may<sp/>mean<sp/><sp/>that<sp/>it<sp/>is<sp/>complicated<sp/>to<sp/>manipulate,<sp/><sp/>and<sp/><sp/>that<sp/><sp/>also</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>therefore<sp/>means<sp/><sp/>that<sp/>it<sp/>is<sp/>reserved<sp/>for<sp/>developers<sp/><sp/>and<sp/><sp/>experienced</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>professionals<sp/>having<sp/>in-depth<sp/>computer<sp/>knowledge.<sp/>Users<sp/>are<sp/>therefore</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>encouraged<sp/>to<sp/>load<sp/>and<sp/>test<sp/>the<sp/>software&apos;s<sp/>suitability<sp/>as<sp/>regards<sp/>their</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>requirements<sp/>in<sp/>conditions<sp/>enabling<sp/>the<sp/>security<sp/>of<sp/>their<sp/>systems<sp/>and/or<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>data<sp/>to<sp/>be<sp/>ensured<sp/>and,<sp/><sp/>more<sp/>generally,<sp/>to<sp/>use<sp/>and<sp/>operate<sp/>it<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>same<sp/>conditions<sp/>as<sp/>regards<sp/>security.<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>The<sp/>fact<sp/>that<sp/>you<sp/>are<sp/>presently<sp/>reading<sp/>this<sp/>means<sp/>that<sp/>you<sp/>have<sp/>had</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>knowledge<sp/>of<sp/>the<sp/>CeCILL<sp/>license<sp/>and<sp/>that<sp/>you<sp/>accept<sp/>its<sp/>terms.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>To<sp/>report<sp/>bugs,<sp/>suggest<sp/>enhancements,<sp/>etc.<sp/>to<sp/>the<sp/>Authors,<sp/>contact</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Frederic<sp/>Dubois.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>frederic.dubois@umontpellier.fr</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*=========================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>wrap_postpro_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wrap_postpro_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="wrap__postpro_8h_1ad16306cc5147145e8872768cb1195445" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__postpro_8h_1ad16306cc5147145e8872768cb1195445" kindref="member">postpro_PostproDuringComputation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="wrap__postpro_8h_1a18aefe63edd9c5c1f448cc4679d1a48b" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__postpro_8h_1a18aefe63edd9c5c1f448cc4679d1a48b" kindref="member">postpro_ReadCommands</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="wrap__postpro_8h_1ac3a07b5c7ce1be2f61219c3cd9cedfb5" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__postpro_8h_1ac3a07b5c7ce1be2f61219c3cd9cedfb5" kindref="member">postpro_PostproBeforeComputation</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>restart=0);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="wrap__postpro_8h_1a355b8566b0d1b38562123cd4358380a1" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__postpro_8h_1a355b8566b0d1b38562123cd4358380a1" kindref="member">postpro_FlushDuringComputation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="wrap__postpro_8h_1a2d801bf67030ef3a3e17848d7c42fb9c" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__postpro_8h_1a2d801bf67030ef3a3e17848d7c42fb9c" kindref="member">postpro_ClosePostproFiles</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="wrap__postpro_8h_1a862d6033def96f6af157b29bb2909dbe" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__postpro_8h_1a862d6033def96f6af157b29bb2909dbe" kindref="member">postpro_SetCircularSelectionZone</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rvalue1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rvalue2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rvalue3);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="wrap__postpro_8h_1a9b78c3815ccbabee53a58c523d175c85" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__postpro_8h_1a9b78c3815ccbabee53a58c523d175c85" kindref="member">postpro_MoveCircularSelectionZone</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rvalue1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rvalue2);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145" refid="wrap__postpro_8h_1a31b248628fbfb27b96a902a87c0de4d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__postpro_8h_1a31b248628fbfb27b96a902a87c0de4d1" kindref="member">postpro_CleanMemory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="wrap__postpro_8h_1a4174aa4153bb72fabeb62a54cdb4da20" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="wrap__postpro_8h_1a4174aa4153bb72fabeb62a54cdb4da20" kindref="member">postpro_2D_GetKineticEnergy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>wrap_postpro_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/post/wrap_postpro.h"/>
  </compounddef>
</doxygen>
