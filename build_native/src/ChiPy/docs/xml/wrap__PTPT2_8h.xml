<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wrap__PTPT2_8h" kind="file" language="C++">
    <compoundname>wrap_PTPT2.h</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="wrap__PTPT2_8h_1a1fe34f4fc762c56428dd62055aeb72b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_SelectProxTactors</definition>
        <argsstring>(int reset=0)</argsstring>
        <name>PTPT2_SelectProxTactors</name>
        <param>
          <type>int</type>
          <declname>reset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>contact detection between PT2Dx tactors </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : PTPT2_SelectProxTactors(reset=0) param[in] reset (integer) : if not 0, detection is skipped but the boxes will be computed anew at next call</para>
<para>First recup coordinate prediction, then proceed to a box selection to found rough contact list and finally compute the final contact list. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="57" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="57" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1ad51fe7d49598f9fe2380dc623a6cd9de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_WriteLastVlocRloc</definition>
        <argsstring>(void)</argsstring>
        <name>PTPT2_WriteLastVlocRloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>write last local values of all PTPT2 contacts </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__PTPT2_8h_1ad51fe7d49598f9fe2380dc623a6cd9de" kindref="member">PTPT2_WriteLastVlocRloc()</ref></para>
<para><linebreak/>
 the values written are relative velocity, forces and local frame<linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="69" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="69" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1aac982f306683647d529db1d69b9c7d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_WriteOutVlocRloc</definition>
        <argsstring>(void)</argsstring>
        <name>PTPT2_WriteOutVlocRloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>write local values of all PTPT2 contacts </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__PTPT2_8h_1aac982f306683647d529db1d69b9c7d7a" kindref="member">PTPT2_WriteOutVlocRloc()</ref></para>
<para><linebreak/>
 the values written are relative velocity, forces and local frame<linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="81" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="81" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1a6ef8e1702273f2e1f05e988ead587278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_DisplayOutVlocRloc</definition>
        <argsstring>(void)</argsstring>
        <name>PTPT2_DisplayOutVlocRloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>display local values of all PTPT2 contacts </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__PTPT2_8h_1a6ef8e1702273f2e1f05e988ead587278" kindref="member">PTPT2_DisplayOutVlocRloc()</ref></para>
<para><linebreak/>
 the values displayed are relative velocity, forces and local frame<linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="93" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="93" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1ad970ba337c14a8971a21d610b2102cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_DisplayProxTactors</definition>
        <argsstring>(void)</argsstring>
        <name>PTPT2_DisplayProxTactors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>display contacts </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__PTPT2_8h_1ad970ba337c14a8971a21d610b2102cd7" kindref="member">PTPT2_DisplayProxTactors()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="103" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="103" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1a47f9ab27f7b37c573faf7c854109fd6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_ReadIniVlocRloc</definition>
        <argsstring>(int num=0)</argsstring>
        <name>PTPT2_ReadIniVlocRloc</name>
        <param>
          <type>int</type>
          <declname>num</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Read VlocRloc file. </para>
        </briefdescription>
        <detaileddescription>
<para>If num &lt;= 0 : DATBOX/VlocRloc.INI file is read Else : OUTBOX/VlocRloc.OUT.num is read, num being the parameter used in TimeEvolution_ReadIniVlocRloc last call</para>
<para>usage : PTPT2_ReadIniVlocRloc(num=0) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">num</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : which VlocRloc file to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="124" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="124" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1afe699bce53fa8fd555a2f3e42378b696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_LoadNetwork</definition>
        <argsstring>(void)</argsstring>
        <name>PTPT2_LoadNetwork</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>read a PTPT2 network from a file </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__PTPT2_8h_1afe699bce53fa8fd555a2f3e42378b696" kindref="member">PTPT2_LoadNetwork()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="134" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="134" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1ad61f7b0e25014b17ee83ae0a3b9b68ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_SetTolerance</definition>
        <argsstring>(double tol)</argsstring>
        <name>PTPT2_SetTolerance</name>
        <param>
          <type>double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
<para>set the maximum violation for a point to point link </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : PTPT2_SetTolerance(tol) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="145" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="145" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1a715403bf317e6f1ed414743dd6431b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_SetExplicitLocalFrame</definition>
        <argsstring>(void)</argsstring>
        <name>PTPT2_SetExplicitLocalFrame</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>local frame is computed only once at the first step </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__PTPT2_8h_1a715403bf317e6f1ed414743dd6431b35" kindref="member">PTPT2_SetExplicitLocalFrame()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="155" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="155" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1a61c1535f5db454a6e804e359e1095440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_LoadParams</definition>
        <argsstring>(void)</argsstring>
        <name>PTPT2_LoadParams</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>read a PTPT2 surface and l0 from a file </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__PTPT2_8h_1a61c1535f5db454a6e804e359e1095440" kindref="member">PTPT2_LoadParams()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="165" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="165" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1a59b8fe86fed36694de043f02250f6d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_UseCurrentNonuc0</definition>
        <argsstring>(int no0)</argsstring>
        <name>PTPT2_UseCurrentNonuc0</name>
        <param>
          <type>int</type>
          <declname>no0</declname>
        </param>
        <briefdescription>
<para>Use GetCoor or value given from file insted of computing nonuc0 from reference coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : PTPT2_UseCurrentNonuc0(to_use) param[in] to_use (integer) : 1 to activate, 0 to deactivate feature </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="180" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="180" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__PTPT2_8h_1aaab833b91716cc30ef5b46862f795837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTPT2_CleanMemory</definition>
        <argsstring>(void)</argsstring>
        <name>PTPT2_CleanMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Free all memory allocated within PTPT2 module. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__PTPT2_8h_1aaab833b91716cc30ef5b46862f795837" kindref="member">PTPT2_CleanMemory()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" line="190" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h" declline="190" declcolumn="19"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*==========================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2000-2025<sp/>CNRS-UM.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>a<sp/>software<sp/>(LMGC90)<sp/>which<sp/>is<sp/>a<sp/>computer<sp/>program<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>which<sp/>purpose<sp/>is<sp/>to<sp/>modelize<sp/>interaction<sp/>problems<sp/>(contact,<sp/>multi-Physics,etc).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>CeCILL<sp/>license<sp/>under<sp/>French<sp/>law<sp/>and</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>abiding<sp/>by<sp/>the<sp/>rules<sp/>of<sp/>distribution<sp/>of<sp/>free<sp/>software.<sp/><sp/>You<sp/>can<sp/><sp/>use,<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>and/<sp/>or<sp/>redistribute<sp/>the<sp/>software<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>CeCILL</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>license<sp/>as<sp/>circulated<sp/>by<sp/>CEA,<sp/>CNRS<sp/>and<sp/>INRIA<sp/>at<sp/>the<sp/>following<sp/>URL</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>&quot;http://www.cecill.info&quot;.<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>As<sp/>a<sp/>counterpart<sp/>to<sp/>the<sp/>access<sp/>to<sp/>the<sp/>source<sp/>code<sp/>and<sp/><sp/>rights<sp/>to<sp/>copy,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>modify<sp/>and<sp/>redistribute<sp/>granted<sp/>by<sp/>the<sp/>license,<sp/>users<sp/>are<sp/>provided<sp/>only</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>with<sp/>a<sp/>limited<sp/>warranty<sp/><sp/>and<sp/>the<sp/>software&apos;s<sp/>author,<sp/><sp/>the<sp/>holder<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>economic<sp/>rights,<sp/><sp/>and<sp/>the<sp/>successive<sp/>licensors<sp/><sp/>have<sp/>only<sp/><sp/>limited</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>liability.<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>respect,<sp/>the<sp/>user&apos;s<sp/>attention<sp/>is<sp/>drawn<sp/>to<sp/>the<sp/>risks<sp/>associated</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>with<sp/>loading,<sp/><sp/>using,<sp/><sp/>modifying<sp/>and/or<sp/>developing<sp/>or<sp/>reproducing<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>software<sp/>by<sp/>the<sp/>user<sp/>in<sp/>light<sp/>of<sp/>its<sp/>specific<sp/>status<sp/>of<sp/>free<sp/>software,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>that<sp/>may<sp/>mean<sp/><sp/>that<sp/>it<sp/>is<sp/>complicated<sp/>to<sp/>manipulate,<sp/><sp/>and<sp/><sp/>that<sp/><sp/>also</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>therefore<sp/>means<sp/><sp/>that<sp/>it<sp/>is<sp/>reserved<sp/>for<sp/>developers<sp/><sp/>and<sp/><sp/>experienced</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>professionals<sp/>having<sp/>in-depth<sp/>computer<sp/>knowledge.<sp/>Users<sp/>are<sp/>therefore</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>encouraged<sp/>to<sp/>load<sp/>and<sp/>test<sp/>the<sp/>software&apos;s<sp/>suitability<sp/>as<sp/>regards<sp/>their</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>requirements<sp/>in<sp/>conditions<sp/>enabling<sp/>the<sp/>security<sp/>of<sp/>their<sp/>systems<sp/>and/or<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>data<sp/>to<sp/>be<sp/>ensured<sp/>and,<sp/><sp/>more<sp/>generally,<sp/>to<sp/>use<sp/>and<sp/>operate<sp/>it<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>same<sp/>conditions<sp/>as<sp/>regards<sp/>security.<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>The<sp/>fact<sp/>that<sp/>you<sp/>are<sp/>presently<sp/>reading<sp/>this<sp/>means<sp/>that<sp/>you<sp/>have<sp/>had</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>knowledge<sp/>of<sp/>the<sp/>CeCILL<sp/>license<sp/>and<sp/>that<sp/>you<sp/>accept<sp/>its<sp/>terms.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>To<sp/>report<sp/>bugs,<sp/>suggest<sp/>enhancements,<sp/>etc.<sp/>to<sp/>the<sp/>Authors,<sp/>contact</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Frederic<sp/>Dubois.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>frederic.dubois@umontpellier.fr</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*=========================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>wrap_PTPT2_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wrap_PTPT2_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="wrap__PTPT2_8h_1a1fe34f4fc762c56428dd62055aeb72b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1a1fe34f4fc762c56428dd62055aeb72b2" kindref="member">PTPT2_SelectProxTactors</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reset=0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="wrap__PTPT2_8h_1ad51fe7d49598f9fe2380dc623a6cd9de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1ad51fe7d49598f9fe2380dc623a6cd9de" kindref="member">PTPT2_WriteLastVlocRloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="wrap__PTPT2_8h_1aac982f306683647d529db1d69b9c7d7a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1aac982f306683647d529db1d69b9c7d7a" kindref="member">PTPT2_WriteOutVlocRloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="wrap__PTPT2_8h_1a6ef8e1702273f2e1f05e988ead587278" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1a6ef8e1702273f2e1f05e988ead587278" kindref="member">PTPT2_DisplayOutVlocRloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="wrap__PTPT2_8h_1ad970ba337c14a8971a21d610b2102cd7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1ad970ba337c14a8971a21d610b2102cd7" kindref="member">PTPT2_DisplayProxTactors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="wrap__PTPT2_8h_1a47f9ab27f7b37c573faf7c854109fd6a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1a47f9ab27f7b37c573faf7c854109fd6a" kindref="member">PTPT2_ReadIniVlocRloc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num=0);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="wrap__PTPT2_8h_1afe699bce53fa8fd555a2f3e42378b696" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1afe699bce53fa8fd555a2f3e42378b696" kindref="member">PTPT2_LoadNetwork</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="wrap__PTPT2_8h_1ad61f7b0e25014b17ee83ae0a3b9b68ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1ad61f7b0e25014b17ee83ae0a3b9b68ec" kindref="member">PTPT2_SetTolerance</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="wrap__PTPT2_8h_1a715403bf317e6f1ed414743dd6431b35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1a715403bf317e6f1ed414743dd6431b35" kindref="member">PTPT2_SetExplicitLocalFrame</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="165" refid="wrap__PTPT2_8h_1a61c1535f5db454a6e804e359e1095440" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1a61c1535f5db454a6e804e359e1095440" kindref="member">PTPT2_LoadParams</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="wrap__PTPT2_8h_1a59b8fe86fed36694de043f02250f6d8e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1a59b8fe86fed36694de043f02250f6d8e" kindref="member">PTPT2_UseCurrentNonuc0</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>no0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="wrap__PTPT2_8h_1aaab833b91716cc30ef5b46862f795837" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__PTPT2_8h_1aaab833b91716cc30ef5b46862f795837" kindref="member">PTPT2_CleanMemory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>wrap_PTPT2_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_PTPT2.h"/>
  </compounddef>
</doxygen>
