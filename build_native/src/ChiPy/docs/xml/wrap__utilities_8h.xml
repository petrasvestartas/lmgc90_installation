<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wrap__utilities_8h" kind="file" language="C++">
    <compoundname>wrap_utilities.h</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="wrap__utilities_8h_1ab0cddf44348dcc5108b6bc068f090ceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void utilities_logMes</definition>
        <argsstring>(char *ul_string, int string_size)</argsstring>
        <name>utilities_logMes</name>
        <param>
          <type>char *</type>
          <declname>ul_string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>string_size</declname>
        </param>
        <briefdescription>
<para>ask to write a message </para>
        </briefdescription>
        <detaileddescription>
<para>If the message is too long (more than 256 characters) it will be truncated</para>
<para>python usage : utilities_logMes(message) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">message</parametername>
</parameternamelist>
<parameterdescription>
<para>(string) : log message to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : length of the message string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="23" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="23" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__utilities_8h_1aec6900ed6d32dde5df183df898905815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void utilities_DisableLogMes</definition>
        <argsstring>(void)</argsstring>
        <name>utilities_DisableLogMes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>disable printing of messages </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__utilities_8h_1aec6900ed6d32dde5df183df898905815" kindref="member">utilities_DisableLogMes()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="33" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="33" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__utilities_8h_1aa7e12f2c31ddaddfbacb6c4f455fd045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void utilities_EnableLogMes</definition>
        <argsstring>(void)</argsstring>
        <name>utilities_EnableLogMes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>enable priting of messages </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__utilities_8h_1aa7e12f2c31ddaddfbacb6c4f455fd045" kindref="member">utilities_EnableLogMes()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="43" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="43" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__utilities_8h_1a95648e58c6fa79b0c13b45ebe15bbd8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void utilities_setIoUnitLimits</definition>
        <argsstring>(int min_unit, int max_unit)</argsstring>
        <name>utilities_setIoUnitLimits</name>
        <param>
          <type>int</type>
          <declname>min_unit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_unit</declname>
        </param>
        <briefdescription>
<para>set the interval of unit numbers lmgc90 can use to open file </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="61" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="61" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__utilities_8h_1ac5d97d1d7ccbbfa7006f57d9c801f719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void utilities_setStopMode</definition>
        <argsstring>(bool to_stop)</argsstring>
        <name>utilities_setStopMode</name>
        <param>
          <type>bool</type>
          <declname>to_stop</declname>
        </param>
        <briefdescription>
<para>Decide to stop or store a message in case of fatal error. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__utilities_8h_1ac5d97d1d7ccbbfa7006f57d9c801f719" kindref="member">utilities_setStopMode()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="71" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="71" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__utilities_8h_1a52fc5819abb103c80eded2de4687adb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int utilities_resetFatal</definition>
        <argsstring>()</argsstring>
        <name>utilities_resetFatal</name>
        <briefdescription>
<para>Clean fatal error state. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is not intended to be used in python but by swig to throw an excpetion </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="81" column="17" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="81" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="wrap__utilities_8h_1a2f58146b375b3f696001093864c574d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int utilities_checkFatal</definition>
        <argsstring>(char **error_log)</argsstring>
        <name>utilities_checkFatal</name>
        <param>
          <type>char **</type>
          <declname>error_log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="91" column="17" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="91" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="wrap__utilities_8h_1ac5da7de6c539bddb2ad40e1578761ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void utilities_OpenFileStandardOutput</definition>
        <argsstring>(char *ul_string, int string_size)</argsstring>
        <name>utilities_OpenFileStandardOutput</name>
        <param>
          <type>char *</type>
          <declname>ul_string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>string_size</declname>
        </param>
        <briefdescription>
<para>Select the file for standard and errors outputs. </para>
        </briefdescription>
        <detaileddescription>
<para>If the filename is too long (more than 256 characters) it will be truncated</para>
<para>python usage : utilities_OpenFileStandardOutput(filename) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>(string) : the name of file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : length the name of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="111" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="111" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__utilities_8h_1af805b8be967e3bc8109dc5bbdc88171d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void utilities_CloseFileStandardOutput</definition>
        <argsstring>()</argsstring>
        <name>utilities_CloseFileStandardOutput</name>
        <briefdescription>
<para>Close the file for standard and errors outputs. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__utilities_8h_1af805b8be967e3bc8109dc5bbdc88171d" kindref="member">utilities_CloseFileStandardOutput()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="121" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="121" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__utilities_8h_1a900dab407d49aeb0f6e63231f3ff237c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void utilities_InitRandomSeed</definition>
        <argsstring>(int *ivector_in=NULL, int ilength_in=0)</argsstring>
        <name>utilities_InitRandomSeed</name>
        <param>
          <type>int *</type>
          <declname>ivector_in</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>ilength_in</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Re-initialize the seed of the build-in random function. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : utilities_InitRandomSeed([seed]) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">seed</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer array) : an optional desired input seed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="137" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="137" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__utilities_8h_1ae424cd55c3dba84cfad00056d3be4054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void utilities_Finalize</definition>
        <argsstring>()</argsstring>
        <name>utilities_Finalize</name>
        <briefdescription>
<para>End of simulation operations. </para>
        </briefdescription>
        <detaileddescription>
<para>Only close all possibly opened units by the program.</para>
<para>python usage : <ref refid="wrap__utilities_8h_1ae424cd55c3dba84cfad00056d3be4054" kindref="member">utilities_Finalize()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" line="149" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h" declline="149" declcolumn="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>wrap_utilities_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wrap_utilities_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="wrap__utilities_8h_1ab0cddf44348dcc5108b6bc068f090ceb" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1ab0cddf44348dcc5108b6bc068f090ceb" kindref="member">utilities_logMes</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>ul_string,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>string_size);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="wrap__utilities_8h_1aec6900ed6d32dde5df183df898905815" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1aec6900ed6d32dde5df183df898905815" kindref="member">utilities_DisableLogMes</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="wrap__utilities_8h_1aa7e12f2c31ddaddfbacb6c4f455fd045" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1aa7e12f2c31ddaddfbacb6c4f455fd045" kindref="member">utilities_EnableLogMes</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="wrap__utilities_8h_1a95648e58c6fa79b0c13b45ebe15bbd8f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1a95648e58c6fa79b0c13b45ebe15bbd8f" kindref="member">utilities_setIoUnitLimits</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_unit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_unit);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="wrap__utilities_8h_1ac5d97d1d7ccbbfa7006f57d9c801f719" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1ac5d97d1d7ccbbfa7006f57d9c801f719" kindref="member">utilities_setStopMode</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>to_stop);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="wrap__utilities_8h_1a52fc5819abb103c80eded2de4687adb9" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1a52fc5819abb103c80eded2de4687adb9" kindref="member">utilities_resetFatal</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="wrap__utilities_8h_1a2f58146b375b3f696001093864c574d7" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1a2f58146b375b3f696001093864c574d7" kindref="member">utilities_checkFatal</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>error_log);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="111" refid="wrap__utilities_8h_1ac5da7de6c539bddb2ad40e1578761ddc" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1ac5da7de6c539bddb2ad40e1578761ddc" kindref="member">utilities_OpenFileStandardOutput</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>ul_string,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>string_size);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="121" refid="wrap__utilities_8h_1af805b8be967e3bc8109dc5bbdc88171d" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1af805b8be967e3bc8109dc5bbdc88171d" kindref="member">utilities_CloseFileStandardOutput</ref>();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="wrap__utilities_8h_1a900dab407d49aeb0f6e63231f3ff237c" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1a900dab407d49aeb0f6e63231f3ff237c" kindref="member">utilities_InitRandomSeed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>ivector_in=NULL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilength_in=0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="wrap__utilities_8h_1ae424cd55c3dba84cfad00056d3be4054" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__utilities_8h_1ae424cd55c3dba84cfad00056d3be4054" kindref="member">utilities_Finalize</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>wrap_utilities_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/shared/wrap_utilities.h"/>
  </compounddef>
</doxygen>
