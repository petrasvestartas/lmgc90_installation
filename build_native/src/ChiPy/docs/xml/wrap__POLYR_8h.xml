<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wrap__POLYR_8h" kind="file" language="C++">
    <compoundname>wrap_POLYR.h</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="wrap__POLYR_8h_1a2fcd12c7177808c58cba1a8616a5fef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_LoadTactors</definition>
        <argsstring>(void)</argsstring>
        <name>POLYR_LoadTactors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>load POLYR from RBDY3 or MAILx and initialize existing_entites </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__POLYR_8h_1a2fcd12c7177808c58cba1a8616a5fef1" kindref="member">POLYR_LoadTactors()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="52" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="52" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a09f2fe13fe0f3d81121aac628826ff09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetContactorColor</definition>
        <argsstring>(int itact, char **c5)</argsstring>
        <name>POLYR_GetContactorColor</name>
        <param>
          <type>int</type>
          <declname>itact</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>c5</declname>
        </param>
        <briefdescription>
<para>Get the color of a given POLYR. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : color = POLYR_GetContactorColor(itacty) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">itacty</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : rank of POLYR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>color (string) : the color of the POLYR itact </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="71" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="71" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a989ecfefdf5b53a6da4b4800606ef599" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_SaveVertex</definition>
        <argsstring>(void)</argsstring>
        <name>POLYR_SaveVertex</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>write position of vertex in a file </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__POLYR_8h_1a989ecfefdf5b53a6da4b4800606ef599" kindref="member">POLYR_SaveVertex()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="81" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="81" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a578f2a085594df6475339d9f79a8eede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_ModifyRadius</definition>
        <argsstring>(double ratio)</argsstring>
        <name>POLYR_ModifyRadius</name>
        <param>
          <type>double</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>apply an amplification/reduction size factor </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : POLYR_ModifyRadius(ratio) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>(real) : ratio factor</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>(double) : ratio factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="96" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="96" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1aa08b54bd465cbfc677388ea2882bdfb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_SetThresholdBigPolyr</definition>
        <argsstring>(double ratio)</argsstring>
        <name>POLYR_SetThresholdBigPolyr</name>
        <param>
          <type>double</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>define the threshold between a plain and a big polyr. big polyr are such that radius &gt; threshold*mean_radius. default threshold = 4. Must be defined before the load of tactors. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : POLYR_SetThresholdBigPolyr(ratio) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>(real) : ratio factor</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>(double) : ratio factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="113" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="113" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a754ceb291a9a42a25ffdb12fa3726754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_SetBigPolyr</definition>
        <argsstring>(int itacty)</argsstring>
        <name>POLYR_SetBigPolyr</name>
        <param>
          <type>int</type>
          <declname>itacty</declname>
        </param>
        <briefdescription>
<para>impose explicitly that an object is big. Must be set after the load of tactors. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : POLYR_SetBigPolyr(itacty) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">itacty</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : rank of the polyr</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">itacty</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) : rank of the polyr </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="128" column="17" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="128" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a68e4c38dbca9b6559d64bfdbf0e93a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_SetNbBigPolyr</definition>
        <argsstring>(int nb)</argsstring>
        <name>POLYR_SetNbBigPolyr</name>
        <param>
          <type>int</type>
          <declname>nb</declname>
        </param>
        <briefdescription>
<para>impose explicitly the number of big POLYR. Must be set after the load of tactors. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : POLYR_SetNbBigPolyr(nb) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nb</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : number of polyr</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">number</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) : number of polyr </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="143" column="17" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="143" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a6cfbdea455c09558689424fe71c96279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_SkipTopoBigPolyr</definition>
        <argsstring>(void)</argsstring>
        <name>POLYR_SkipTopoBigPolyr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>skip the topological decomposition of a big POLYR. its surface is considered as a soup of triangle. usefull with complicated surface using Cundall CP detection </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__POLYR_8h_1a6cfbdea455c09558689424fe71c96279" kindref="member">POLYR_SkipTopoBigPolyr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="158" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="158" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a4638527af84e1db7baa5d683a1710f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_SkipAutomaticReorientation</definition>
        <argsstring>(void)</argsstring>
        <name>POLYR_SkipAutomaticReorientation</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>disable automatic reorientation (which works only with convex POLYR). </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__POLYR_8h_1a4638527af84e1db7baa5d683a1710f0e" kindref="member">POLYR_SkipAutomaticReorientation()</ref></para>
<para><linebreak/>
 Disable the automatic reorientation of normals performed by lmgc90.<linebreak/>
 This is necessary when using non-convex objects. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="171" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="171" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1af06496abacd017c2e9a435615d808158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_SkipHEBuild</definition>
        <argsstring>(void)</argsstring>
        <name>POLYR_SkipHEBuild</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>disable Half-Edge structure generation (HE is necessary for non convex contact detection) </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__POLYR_8h_1af06496abacd017c2e9a435615d808158" kindref="member">POLYR_SkipHEBuild()</ref></para>
<para><linebreak/>
 Disable the Half-Edge structure generation performed by lmgc90.<linebreak/>
 This is necessary when testing the import of strange object. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="184" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="184" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a9a7af527a033c4602973e2e251ad50d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_TopologyAngle</definition>
        <argsstring>(double angle)</argsstring>
        <name>POLYR_TopologyAngle</name>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>set the maximum angle (between 0 and 180 degree) threshold between 2 elements to declare them as belonging to the same topological face </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : POLYR_TopologyAngle(angle) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="195" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="195" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1ab8c1de508ff5c2148ff37542ed6656ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_FlatnessAngle</definition>
        <argsstring>(double angle)</argsstring>
        <name>POLYR_FlatnessAngle</name>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>set the maximum angle (between 0 and 180 degree) variation between elements of a topological face to declare it as flat </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : POLYR_FlatnessAngle(angle) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="206" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="206" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1aebe8e131fc743953779c1f02ae366e02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetWireframe</definition>
        <argsstring>(int ivalue1, double angle, double **matrix_out, int *dim1, int *dim2, int **pointer_out2, int *length2)</argsstring>
        <name>POLYR_GetWireframe</name>
        <param>
          <type>int</type>
          <declname>ivalue1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>matrix_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>pointer_out2</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>length2</declname>
        </param>
        <briefdescription>
<para>Get wireframe of a POLYR. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : coor,connectivity = POLYR_GetWireframe(itacty, angle) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">itacty</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : rank of the POLYR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">angle</parametername>
</parameternamelist>
<parameterdescription>
<para>(double) : threshold angle to skip some nodes on boundary of faces of the POLYR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>coor (double array) : reference on the coor vector seen as a numpy array of size [nb_point,3] connectivity (integer array) : reference on the connectivity vector seen as a numpy array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="229" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="229" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a2682f370f9cda4c57596646bc9d203f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetVertex</definition>
        <argsstring>(int itacty, double **matrix_out, int *dim1, int *dim2)</argsstring>
        <name>POLYR_GetVertex</name>
        <param>
          <type>int</type>
          <declname>itacty</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>matrix_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
<para>Get the outline of a POLYR in almost current configuration. </para>
        </briefdescription>
        <detaileddescription>
<para>If the POLYR is a real POLYR the current position of the center of the POLYR is used but the local frame for the orientation is the on in detection configuration.</para>
<para>If the POLYR is in fact a POLYD the current position of nodes of the mesh are used.</para>
<para>usage : vertex = POLYR_GetVertex(itacty) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itacty</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : rank of considered POLYR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vertex (double 2D-array) : the coordinates of the vertices </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="253" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="253" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a8cd270aca12cd26263ed6e7adfbb759d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetPtrVertexTT</definition>
        <argsstring>(int itacty, double **pointer_out, int *dim1, int *dim2)</argsstring>
        <name>POLYR_GetPtrVertexTT</name>
        <param>
          <type>int</type>
          <declname>itacty</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>pointer_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
<para>Get a pointer on the outline of a POLYR in detection configuration. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : vertex = POLYR_GetPtrVertexTT(itacty) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itacty</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : rank of considered POLYR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vertex (double 2D-array) : the coordinates of the vertices </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="272" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="272" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1aa463cb22ccef3509c2feb0fa3bc44617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetPtrNormalTT</definition>
        <argsstring>(int itacty, double **pointer_out, int *dim1, int *dim2)</argsstring>
        <name>POLYR_GetPtrNormalTT</name>
        <param>
          <type>int</type>
          <declname>itacty</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>pointer_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
<para>Get a pointer on the outline of a POLYR in detection configuration - be carefull to move polyr. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : normal = POLYR_GetPtrNormalTT(itacty) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itacty</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : rank of considered POLYR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>normal (double 2D-array) : the coordinates of the vertices </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="291" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="291" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1acd74f5f76b6131e6a4cd53f88b3d93d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_MoveToConfigurationTT</definition>
        <argsstring>(void)</argsstring>
        <name>POLYR_MoveToConfigurationTT</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>move the polyr in the configuration TT ; mandatory to get the wireframe in deformed configuration </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__POLYR_8h_1acd74f5f76b6131e6a4cd53f88b3d93d3" kindref="member">POLYR_MoveToConfigurationTT()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="301" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="301" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1afa3f853d38e399122f08ce51a674787a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetPOLYR2BDYTY</definition>
        <argsstring>(int **matrix_out, int *dim1, int *dim2)</argsstring>
        <name>POLYR_GetPOLYR2BDYTY</name>
        <param>
          <type>int **</type>
          <declname>matrix_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
<para>Get a copy of map POLYR2bdyty. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : polyr2bdyty = <ref refid="wrap__POLYR_8h_1afa3f853d38e399122f08ce51a674787a" kindref="member">POLYR_GetPOLYR2BDYTY()</ref> <simplesect kind="return"><para>polyr2bdyty (integer 2D-array) : the polyr2bdyty map </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="319" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="319" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a32679c3412cc993f6e061aa8a8edb6c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetPtrPOLYR2BDYTY</definition>
        <argsstring>(int **pointer_out, int *dim1, int *dim2)</argsstring>
        <name>POLYR_GetPtrPOLYR2BDYTY</name>
        <param>
          <type>int **</type>
          <declname>pointer_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
<para>Get a pointer on map POLYR2bdyty. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : polyr2bdyty = <ref refid="wrap__POLYR_8h_1a32679c3412cc993f6e061aa8a8edb6c1" kindref="member">POLYR_GetPtrPOLYR2BDYTY()</ref> <simplesect kind="return"><para>polyr2bdyty (integer 2D-array) : a pointer in the polyr2bdyty map </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="336" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="336" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1ace744c9e859c6b5f4980be74c604e54e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int POLYR_IsVisible</definition>
        <argsstring>(int itacty)</argsstring>
        <name>POLYR_IsVisible</name>
        <param>
          <type>int</type>
          <declname>itacty</declname>
        </param>
        <briefdescription>
<para>return if a given contactor is attached to a visible body </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : visible = POLYR_IsVisible(itacty) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">itacty</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : id of the contactor we want visibility </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>visible (integer) : 1 if body is visible, 0 else </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="364" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="364" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1ae6055952c678d50326594b60ed24aa2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int POLYR_GetNbPOLYR</definition>
        <argsstring>(void)</argsstring>
        <name>POLYR_GetNbPOLYR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the number of POLYR. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : nb_POLYR = <ref refid="wrap__POLYR_8h_1ae6055952c678d50326594b60ed24aa2c" kindref="member">POLYR_GetNbPOLYR()</ref></para>
<para><simplesect kind="return"><para>nb_POLYR (integer) : the number of POLYR </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="383" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="383" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1ae2b3b8f2864ab6b5d2e62b4604c11734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_InitOutlines</definition>
        <argsstring>(double **pointer_out, int *dim1, int *dim2)</argsstring>
        <name>POLYR_InitOutlines</name>
        <param>
          <type>double **</type>
          <declname>pointer_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
<para>Get a reference on the outlines of all POLYR. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : outlines = <ref refid="wrap__POLYR_8h_1ae2b3b8f2864ab6b5d2e62b4604c11734" kindref="member">POLYR_InitOutlines()</ref> <simplesect kind="return"><para>outlines (double array) : a reference on outlines_POLYR </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="401" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="401" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1af4fc6010f5cb9e61c0b0f5cb65d7ee75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_InitScalarFields</definition>
        <argsstring>(double **pointer_out, int *dim1, int *dim2)</argsstring>
        <name>POLYR_InitScalarFields</name>
        <param>
          <type>double **</type>
          <declname>pointer_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
<para>Get a reference on the scalar fields of all POLYR. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : scalarfields = POLYR_InitScalarfields() <simplesect kind="return"><para>scalarfields (double array) : reference on scalarfields_POLYR array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="419" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="419" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a246cc496e9c821d1fbd6fb0758267518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_UpdatePostdata</definition>
        <argsstring>(void)</argsstring>
        <name>POLYR_UpdatePostdata</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update values of outlines_POLYR and scalarfields_POLYR pointers. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : <ref refid="wrap__POLYR_8h_1a246cc496e9c821d1fbd6fb0758267518" kindref="member">POLYR_UpdatePostdata()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="431" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="431" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1ac3d5b712565973ff3c62a817b4135122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetNbPointOutlines</definition>
        <argsstring>(int **pointer_out, int *length)</argsstring>
        <name>POLYR_GetNbPointOutlines</name>
        <param>
          <type>int **</type>
          <declname>pointer_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Get the list of cumulated outline points number. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : nb_pointOutlines = <ref refid="wrap__POLYR_8h_1ac3d5b712565973ff3c62a817b4135122" kindref="member">POLYR_GetNbPointOutlines()</ref> <simplesect kind="return"><para>nb_pointOutlines (integer array) : the cumulated number of outline points of the POLYR </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="448" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="448" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a02a5c3a6070b508e4bb517c8b0fc8fe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int POLYR_GetNbScalarFields</definition>
        <argsstring>(void)</argsstring>
        <name>POLYR_GetNbScalarFields</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the number of scalar fields of a POLYR. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : nb_scalarfields = <ref refid="wrap__POLYR_8h_1a02a5c3a6070b508e4bb517c8b0fc8fe1" kindref="member">POLYR_GetNbScalarFields()</ref> <simplesect kind="return"><para>nb_scalarfields (integer) : the number of scalar fields of a POLYR </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="464" column="18" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="464" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a1946cdc6d850dc11d55070c051cce486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetPtrAllConnectivities</definition>
        <argsstring>(int **pointer_out, int *length)</argsstring>
        <name>POLYR_GetPtrAllConnectivities</name>
        <param>
          <type>int **</type>
          <declname>pointer_out</declname>
          <defname>i4_vector</defname>
        </param>
        <param>
          <type>int *</type>
          <declname>length</declname>
          <defname>i4_size</defname>
        </param>
        <briefdescription>
<para>Get a reference on the connectivities of all POLYR. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : connec = <ref refid="wrap__POLYR_8h_1a1946cdc6d850dc11d55070c051cce486" kindref="member">POLYR_GetPtrAllConnectivities()</ref> <simplesect kind="return"><para>connec (integer array) : a reference on all_connectivities </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="481" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="481" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a816c44fcfc04e4ab9f5f98fc545bca81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetPtrConnectivity</definition>
        <argsstring>(int itacty, int **pointer_out, int *dim1, int *dim2)</argsstring>
        <name>POLYR_GetPtrConnectivity</name>
        <param>
          <type>int</type>
          <declname>itacty</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>pointer_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
<para>Get a reference on the connectivity of one POLYR. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : connec = POLYR_GetPtrConnectivity(itacty) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itacty</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : POLYR number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>connec (integer 2D-array) : reference on connectivity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="501" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="501" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a7fa3d54763c9c87e7e699bc4e6adde66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetPtrVertexRef</definition>
        <argsstring>(int itacty, double **pointer_out, int *dim1, int *dim2)</argsstring>
        <name>POLYR_GetPtrVertexRef</name>
        <param>
          <type>int</type>
          <declname>itacty</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>pointer_out</declname>
          <defname>matrix_out</defname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
<para>Get the position of the vertices of a POLYR in its inertia frame. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : vertex = POLYR_GetPtrVertexRef(itacty) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itacty</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : rank of considered POLYR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vertex (double 2D-array) : the coordinates of the vertices </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="520" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="520" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1ae71b13d79c6ef33be16abb6d5bb35787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_GetTopoData</definition>
        <argsstring>(int **matrix_out, int *dim1, int *dim2)</argsstring>
        <name>POLYR_GetTopoData</name>
        <param>
          <type>int **</type>
          <declname>matrix_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
<para>Get for each face of all POLYR : contactor id, topo id, face id and face status. </para>
        </briefdescription>
        <detaileddescription>
<para>usage : topo_data = <ref refid="wrap__POLYR_8h_1ae71b13d79c6ef33be16abb6d5bb35787" kindref="member">POLYR_GetTopoData()</ref> <simplesect kind="return"><para>topt_data (int 2D-array) : topology data of all faces of all POLYR </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="537" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="537" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__POLYR_8h_1a5b4aa19e008410b69f62e5a46c0fe675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void POLYR_CleanMemory</definition>
        <argsstring>(void)</argsstring>
        <name>POLYR_CleanMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Free all memory allocated within POLYR module. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__POLYR_8h_1a5b4aa19e008410b69f62e5a46c0fe675" kindref="member">POLYR_CleanMemory()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" line="547" column="20" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h" declline="547" declcolumn="20"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*==========================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2000-2025<sp/>CNRS-UM.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>a<sp/>software<sp/>(LMGC90)<sp/>which<sp/>is<sp/>a<sp/>computer<sp/>program<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>which<sp/>purpose<sp/>is<sp/>to<sp/>modelize<sp/>interaction<sp/>problems<sp/>(contact,<sp/>multi-Physics,etc).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>CeCILL<sp/>license<sp/>under<sp/>French<sp/>law<sp/>and</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>abiding<sp/>by<sp/>the<sp/>rules<sp/>of<sp/>distribution<sp/>of<sp/>free<sp/>software.<sp/><sp/>You<sp/>can<sp/><sp/>use,<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>and/<sp/>or<sp/>redistribute<sp/>the<sp/>software<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>CeCILL</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>license<sp/>as<sp/>circulated<sp/>by<sp/>CEA,<sp/>CNRS<sp/>and<sp/>INRIA<sp/>at<sp/>the<sp/>following<sp/>URL</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>&quot;http://www.cecill.info&quot;.<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>As<sp/>a<sp/>counterpart<sp/>to<sp/>the<sp/>access<sp/>to<sp/>the<sp/>source<sp/>code<sp/>and<sp/><sp/>rights<sp/>to<sp/>copy,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>modify<sp/>and<sp/>redistribute<sp/>granted<sp/>by<sp/>the<sp/>license,<sp/>users<sp/>are<sp/>provided<sp/>only</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>with<sp/>a<sp/>limited<sp/>warranty<sp/><sp/>and<sp/>the<sp/>software&apos;s<sp/>author,<sp/><sp/>the<sp/>holder<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>economic<sp/>rights,<sp/><sp/>and<sp/>the<sp/>successive<sp/>licensors<sp/><sp/>have<sp/>only<sp/><sp/>limited</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>liability.<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>respect,<sp/>the<sp/>user&apos;s<sp/>attention<sp/>is<sp/>drawn<sp/>to<sp/>the<sp/>risks<sp/>associated</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>with<sp/>loading,<sp/><sp/>using,<sp/><sp/>modifying<sp/>and/or<sp/>developing<sp/>or<sp/>reproducing<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>software<sp/>by<sp/>the<sp/>user<sp/>in<sp/>light<sp/>of<sp/>its<sp/>specific<sp/>status<sp/>of<sp/>free<sp/>software,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>that<sp/>may<sp/>mean<sp/><sp/>that<sp/>it<sp/>is<sp/>complicated<sp/>to<sp/>manipulate,<sp/><sp/>and<sp/><sp/>that<sp/><sp/>also</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>therefore<sp/>means<sp/><sp/>that<sp/>it<sp/>is<sp/>reserved<sp/>for<sp/>developers<sp/><sp/>and<sp/><sp/>experienced</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>professionals<sp/>having<sp/>in-depth<sp/>computer<sp/>knowledge.<sp/>Users<sp/>are<sp/>therefore</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>encouraged<sp/>to<sp/>load<sp/>and<sp/>test<sp/>the<sp/>software&apos;s<sp/>suitability<sp/>as<sp/>regards<sp/>their</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>requirements<sp/>in<sp/>conditions<sp/>enabling<sp/>the<sp/>security<sp/>of<sp/>their<sp/>systems<sp/>and/or<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>data<sp/>to<sp/>be<sp/>ensured<sp/>and,<sp/><sp/>more<sp/>generally,<sp/>to<sp/>use<sp/>and<sp/>operate<sp/>it<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>same<sp/>conditions<sp/>as<sp/>regards<sp/>security.<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>The<sp/>fact<sp/>that<sp/>you<sp/>are<sp/>presently<sp/>reading<sp/>this<sp/>means<sp/>that<sp/>you<sp/>have<sp/>had</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>knowledge<sp/>of<sp/>the<sp/>CeCILL<sp/>license<sp/>and<sp/>that<sp/>you<sp/>accept<sp/>its<sp/>terms.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>To<sp/>report<sp/>bugs,<sp/>suggest<sp/>enhancements,<sp/>etc.<sp/>to<sp/>the<sp/>Authors,<sp/>contact</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Frederic<sp/>Dubois.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>frederic.dubois@umontpellier.fr</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*=========================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>wrap_POLYR_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wrap_POLYR_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="wrap__POLYR_8h_1a2fcd12c7177808c58cba1a8616a5fef1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a2fcd12c7177808c58cba1a8616a5fef1" kindref="member">POLYR_LoadTactors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fd:<sp/>a<sp/>virer<sp/>;<sp/>passer<sp/>par<sp/>polyr2bdyty<sp/>+<sp/>getcolor<sp/>sur<sp/>modèle<sp/>bulk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="wrap__POLYR_8h_1a09f2fe13fe0f3d81121aac628826ff09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a09f2fe13fe0f3d81121aac628826ff09" kindref="member">POLYR_GetContactorColor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itact,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>c5);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="81" refid="wrap__POLYR_8h_1a989ecfefdf5b53a6da4b4800606ef599" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a989ecfefdf5b53a6da4b4800606ef599" kindref="member">POLYR_SaveVertex</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="wrap__POLYR_8h_1a578f2a085594df6475339d9f79a8eede" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a578f2a085594df6475339d9f79a8eede" kindref="member">POLYR_ModifyRadius</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="wrap__POLYR_8h_1aa08b54bd465cbfc677388ea2882bdfb8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1aa08b54bd465cbfc677388ea2882bdfb8" kindref="member">POLYR_SetThresholdBigPolyr</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="wrap__POLYR_8h_1a754ceb291a9a42a25ffdb12fa3726754" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a754ceb291a9a42a25ffdb12fa3726754" kindref="member">POLYR_SetBigPolyr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itacty);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="wrap__POLYR_8h_1a68e4c38dbca9b6559d64bfdbf0e93a8c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a68e4c38dbca9b6559d64bfdbf0e93a8c" kindref="member">POLYR_SetNbBigPolyr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="wrap__POLYR_8h_1a6cfbdea455c09558689424fe71c96279" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a6cfbdea455c09558689424fe71c96279" kindref="member">POLYR_SkipTopoBigPolyr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="wrap__POLYR_8h_1a4638527af84e1db7baa5d683a1710f0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a4638527af84e1db7baa5d683a1710f0e" kindref="member">POLYR_SkipAutomaticReorientation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="wrap__POLYR_8h_1af06496abacd017c2e9a435615d808158" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1af06496abacd017c2e9a435615d808158" kindref="member">POLYR_SkipHEBuild</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="wrap__POLYR_8h_1a9a7af527a033c4602973e2e251ad50d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a9a7af527a033c4602973e2e251ad50d1" kindref="member">POLYR_TopologyAngle</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="wrap__POLYR_8h_1ab8c1de508ff5c2148ff37542ed6656ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1ab8c1de508ff5c2148ff37542ed6656ef" kindref="member">POLYR_FlatnessAngle</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="wrap__POLYR_8h_1aebe8e131fc743953779c1f02ae366e02" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1aebe8e131fc743953779c1f02ae366e02" kindref="member">POLYR_GetWireframe</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivalue1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**<sp/>matrix_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dim2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**<sp/>pointer_out2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>length2);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="wrap__POLYR_8h_1a2682f370f9cda4c57596646bc9d203f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a2682f370f9cda4c57596646bc9d203f7" kindref="member">POLYR_GetVertex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itacty,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">**<sp/>matrix_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim2);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="wrap__POLYR_8h_1a8cd270aca12cd26263ed6e7adfbb759d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a8cd270aca12cd26263ed6e7adfbb759d" kindref="member">POLYR_GetPtrVertexTT</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itacty,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">**<sp/>pointer_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim2);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="wrap__POLYR_8h_1aa463cb22ccef3509c2feb0fa3bc44617" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1aa463cb22ccef3509c2feb0fa3bc44617" kindref="member">POLYR_GetPtrNormalTT</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itacty,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">**<sp/>pointer_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim2);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="wrap__POLYR_8h_1acd74f5f76b6131e6a4cd53f88b3d93d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1acd74f5f76b6131e6a4cd53f88b3d93d3" kindref="member">POLYR_MoveToConfigurationTT</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="wrap__POLYR_8h_1afa3f853d38e399122f08ce51a674787a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1afa3f853d38e399122f08ce51a674787a" kindref="member">POLYR_GetPOLYR2BDYTY</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>matrix_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim2);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="wrap__POLYR_8h_1a32679c3412cc993f6e061aa8a8edb6c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a32679c3412cc993f6e061aa8a8edb6c1" kindref="member">POLYR_GetPtrPOLYR2BDYTY</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>pointer_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim2);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>/\**<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>*<sp/>@fn<sp/>void<sp/>POLYR_GetNb(int<sp/>*<sp/>ires)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>*<sp/>@brief<sp/>get<sp/>the<sp/>number<sp/>of<sp/>POLYR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>*<sp/>@cond<sp/>PYDOC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>*<sp/>python<sp/>usage<sp/>:<sp/>POLYR_GetNb(ires)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>*<sp/>@endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>*\/<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>extern<sp/>&quot;C&quot;<sp/>void<sp/>POLYR_GetNb(int<sp/>*<sp/>ires);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="wrap__POLYR_8h_1ace744c9e859c6b5f4980be74c604e54e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1ace744c9e859c6b5f4980be74c604e54e" kindref="member">POLYR_IsVisible</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itacty);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>external<sp/>vtk<sp/>visu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="wrap__POLYR_8h_1ae6055952c678d50326594b60ed24aa2c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1ae6055952c678d50326594b60ed24aa2c" kindref="member">POLYR_GetNbPOLYR</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="wrap__POLYR_8h_1ae2b3b8f2864ab6b5d2e62b4604c11734" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1ae2b3b8f2864ab6b5d2e62b4604c11734" kindref="member">POLYR_InitOutlines</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**<sp/>pointer_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dim2);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="wrap__POLYR_8h_1af4fc6010f5cb9e61c0b0f5cb65d7ee75" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1af4fc6010f5cb9e61c0b0f5cb65d7ee75" kindref="member">POLYR_InitScalarFields</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**<sp/>pointer_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dim2);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>a<sp/>virer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="wrap__POLYR_8h_1a246cc496e9c821d1fbd6fb0758267518" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a246cc496e9c821d1fbd6fb0758267518" kindref="member">POLYR_UpdatePostdata</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="wrap__POLYR_8h_1ac3d5b712565973ff3c62a817b4135122" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1ac3d5b712565973ff3c62a817b4135122" kindref="member">POLYR_GetNbPointOutlines</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>pointer_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>length);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="464" refid="wrap__POLYR_8h_1a02a5c3a6070b508e4bb517c8b0fc8fe1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a02a5c3a6070b508e4bb517c8b0fc8fe1" kindref="member">POLYR_GetNbScalarFields</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="481" refid="wrap__POLYR_8h_1a1946cdc6d850dc11d55070c051cce486" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a1946cdc6d850dc11d55070c051cce486" kindref="member">POLYR_GetPtrAllConnectivities</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**<sp/>pointer_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>length);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="wrap__POLYR_8h_1a816c44fcfc04e4ab9f5f98fc545bca81" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a816c44fcfc04e4ab9f5f98fc545bca81" kindref="member">POLYR_GetPtrConnectivity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itacty,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**<sp/>pointer_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dim2);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="wrap__POLYR_8h_1a7fa3d54763c9c87e7e699bc4e6adde66" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a7fa3d54763c9c87e7e699bc4e6adde66" kindref="member">POLYR_GetPtrVertexRef</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itacty,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">**<sp/>pointer_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim2);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="wrap__POLYR_8h_1ae71b13d79c6ef33be16abb6d5bb35787" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1ae71b13d79c6ef33be16abb6d5bb35787" kindref="member">POLYR_GetTopoData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>matrix_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dim2);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="wrap__POLYR_8h_1a5b4aa19e008410b69f62e5a46c0fe675" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__POLYR_8h_1a5b4aa19e008410b69f62e5a46c0fe675" kindref="member">POLYR_CleanMemory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>wrap_POLYR<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/rigid_3D/wrap_POLYR.h"/>
  </compounddef>
</doxygen>
