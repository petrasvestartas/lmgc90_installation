<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wrap__DKJCx_8h" kind="file" language="C++">
    <compoundname>wrap_DKJCx.h</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="wrap__DKJCx_8h_1a48cb665173395dcc2d7dc533da4a923a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_SelectProxTactors</definition>
        <argsstring>(int reset=0)</argsstring>
        <name>DKJCx_SelectProxTactors</name>
        <param>
          <type>int</type>
          <declname>reset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>contact detection between DISKx and JONCx tactors </para>
        </briefdescription>
        <detaileddescription>
<para>First recup coordinate prediction, then proceed to a box selection to found rough contact list and finally compute the final contact list.</para>
<para>python usage : DKJCx_SelectProxTactors(reset=0)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">reset</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : if not 0, detection is skipped but the boxes will be computed anew at next call </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="57" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="57" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__DKJCx_8h_1a454ade61b93710bde7bdd438726c5448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_SmoothForceComputation</definition>
        <argsstring>(void)</argsstring>
        <name>DKJCx_SmoothForceComputation</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>explicit computation of contact forces </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__DKJCx_8h_1a454ade61b93710bde7bdd438726c5448" kindref="member">DKJCx_SmoothForceComputation()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="67" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="67" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__DKJCx_8h_1a0708b93a164dc6b88cba695d177cd584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_WriteLastVlocRloc</definition>
        <argsstring>(void)</argsstring>
        <name>DKJCx_WriteLastVlocRloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>write last local values of all DKJCx contacts </para>
        </briefdescription>
        <detaileddescription>
<para>The values written are relative velocity, forces and local frame</para>
<para>python usage : <ref refid="wrap__DKJCx_8h_1a0708b93a164dc6b88cba695d177cd584" kindref="member">DKJCx_WriteLastVlocRloc()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="79" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="79" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__DKJCx_8h_1a1a9327254193d51560ed83d44769889c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_WriteOutVlocRloc</definition>
        <argsstring>(void)</argsstring>
        <name>DKJCx_WriteOutVlocRloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>write local values of all DKJCx contacts </para>
        </briefdescription>
        <detaileddescription>
<para>The values written are relative velocity, forces and local frame</para>
<para>python usage : <ref refid="wrap__DKJCx_8h_1a1a9327254193d51560ed83d44769889c" kindref="member">DKJCx_WriteOutVlocRloc()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="91" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="91" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__DKJCx_8h_1a56fa78765572361e4c4a6111e6e04f3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_DisplayOutVlocRloc</definition>
        <argsstring>(void)</argsstring>
        <name>DKJCx_DisplayOutVlocRloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>display local values of all DKJCx contacts </para>
        </briefdescription>
        <detaileddescription>
<para>The values displayed are relative velocity, forces and local frame</para>
<para>python usage : <ref refid="wrap__DKJCx_8h_1a56fa78765572361e4c4a6111e6e04f3e" kindref="member">DKJCx_DisplayOutVlocRloc()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="103" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="103" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__DKJCx_8h_1a8e79b1529676b92b5820e4e561d247f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_DisplayProxTactors</definition>
        <argsstring>(void)</argsstring>
        <name>DKJCx_DisplayProxTactors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>display contacts </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__DKJCx_8h_1a8e79b1529676b92b5820e4e561d247f0" kindref="member">DKJCx_DisplayProxTactors()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="113" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="113" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__DKJCx_8h_1a595af69a5b425ef804f6d8b6d82c03a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_ReadIniVlocRloc</definition>
        <argsstring>(int num=0)</argsstring>
        <name>DKJCx_ReadIniVlocRloc</name>
        <param>
          <type>int</type>
          <declname>num</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Read VlocRloc file. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>If num &lt;= 0 : DATBOX/VlocRloc.INI file is read</para>
</listitem><listitem><para>Else : OUTBOX/VlocRloc.OUT.num is read, num being<itemizedlist>
<listitem><para>the parameter used in TimeEvolution_ReadIniVlocRloc last call</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para>python usage : DKJCx_ReadIniVlocRloc(num=0)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">num</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : which VlocRloc file to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="134" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="134" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__DKJCx_8h_1a5739dcfda52d725709106b461a63f42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_SetSurfaceSectors</definition>
        <argsstring>(int nbsect)</argsstring>
        <name>DKJCx_SetSurfaceSectors</name>
        <param>
          <type>int</type>
          <declname>nbsect</declname>
        </param>
        <briefdescription>
<para>Set the number of angular sectors of the surface of contactors. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : DKJCx_SetSurfaceSectors(nbsect)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nbsect</parametername>
</parameternamelist>
<parameterdescription>
<para>(integer) : number of sectors </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="150" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="150" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__DKJCx_8h_1aad0773f2b0ca417f01c94dda5ec87453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_ComputeStress</definition>
        <argsstring>(void)</argsstring>
        <name>DKJCx_ComputeStress</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>compute the DKJC contribution to the equivalent stress tensor </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__DKJCx_8h_1aad0773f2b0ca417f01c94dda5ec87453" kindref="member">DKJCx_ComputeStress()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="165" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="165" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__DKJCx_8h_1ab2c3cd67531bf5a1a2cb15dccfcc4cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_CleanMemory</definition>
        <argsstring>(void)</argsstring>
        <name>DKJCx_CleanMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Free all memory allocated within DKJCx module. </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : <ref refid="wrap__DKJCx_8h_1ab2c3cd67531bf5a1a2cb15dccfcc4cc9" kindref="member">DKJCx_CleanMemory()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="175" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="175" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="wrap__DKJCx_8h_1a0ab55b3d8a0cccdb49a12d801ff173e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DKJCx_SetFrictionModel</definition>
        <argsstring>(char *cflag)</argsstring>
        <name>DKJCx_SetFrictionModel</name>
        <param>
          <type>char *</type>
          <declname>cflag</declname>
        </param>
        <briefdescription>
<para>initialize data for simulation using evolutive local friction </para>
        </briefdescription>
        <detaileddescription>
<para>python usage : DKJCx_SetFrictionModel(cflag) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cflag</parametername>
</parameternamelist>
<parameterdescription>
<para>(char) : model to use (&apos;min&apos;, &apos;max&apos; or &apos;ave&apos;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" line="190" column="19" declfile="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h" declline="190" declcolumn="19"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*==========================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2000-2025<sp/>CNRS-UM.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>a<sp/>software<sp/>(LMGC90)<sp/>which<sp/>is<sp/>a<sp/>computer<sp/>program<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>which<sp/>purpose<sp/>is<sp/>to<sp/>modelize<sp/>interaction<sp/>problems<sp/>(contact,<sp/>multi-Physics,etc).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>CeCILL<sp/>license<sp/>under<sp/>French<sp/>law<sp/>and</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>abiding<sp/>by<sp/>the<sp/>rules<sp/>of<sp/>distribution<sp/>of<sp/>free<sp/>software.<sp/><sp/>You<sp/>can<sp/><sp/>use,<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>and/<sp/>or<sp/>redistribute<sp/>the<sp/>software<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>CeCILL</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>license<sp/>as<sp/>circulated<sp/>by<sp/>CEA,<sp/>CNRS<sp/>and<sp/>INRIA<sp/>at<sp/>the<sp/>following<sp/>URL</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>&quot;http://www.cecill.info&quot;.<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>As<sp/>a<sp/>counterpart<sp/>to<sp/>the<sp/>access<sp/>to<sp/>the<sp/>source<sp/>code<sp/>and<sp/><sp/>rights<sp/>to<sp/>copy,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>modify<sp/>and<sp/>redistribute<sp/>granted<sp/>by<sp/>the<sp/>license,<sp/>users<sp/>are<sp/>provided<sp/>only</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>with<sp/>a<sp/>limited<sp/>warranty<sp/><sp/>and<sp/>the<sp/>software&apos;s<sp/>author,<sp/><sp/>the<sp/>holder<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>economic<sp/>rights,<sp/><sp/>and<sp/>the<sp/>successive<sp/>licensors<sp/><sp/>have<sp/>only<sp/><sp/>limited</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>liability.<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>respect,<sp/>the<sp/>user&apos;s<sp/>attention<sp/>is<sp/>drawn<sp/>to<sp/>the<sp/>risks<sp/>associated</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>with<sp/>loading,<sp/><sp/>using,<sp/><sp/>modifying<sp/>and/or<sp/>developing<sp/>or<sp/>reproducing<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>software<sp/>by<sp/>the<sp/>user<sp/>in<sp/>light<sp/>of<sp/>its<sp/>specific<sp/>status<sp/>of<sp/>free<sp/>software,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>that<sp/>may<sp/>mean<sp/><sp/>that<sp/>it<sp/>is<sp/>complicated<sp/>to<sp/>manipulate,<sp/><sp/>and<sp/><sp/>that<sp/><sp/>also</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>therefore<sp/>means<sp/><sp/>that<sp/>it<sp/>is<sp/>reserved<sp/>for<sp/>developers<sp/><sp/>and<sp/><sp/>experienced</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>professionals<sp/>having<sp/>in-depth<sp/>computer<sp/>knowledge.<sp/>Users<sp/>are<sp/>therefore</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>encouraged<sp/>to<sp/>load<sp/>and<sp/>test<sp/>the<sp/>software&apos;s<sp/>suitability<sp/>as<sp/>regards<sp/>their</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>requirements<sp/>in<sp/>conditions<sp/>enabling<sp/>the<sp/>security<sp/>of<sp/>their<sp/>systems<sp/>and/or<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>data<sp/>to<sp/>be<sp/>ensured<sp/>and,<sp/><sp/>more<sp/>generally,<sp/>to<sp/>use<sp/>and<sp/>operate<sp/>it<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>same<sp/>conditions<sp/>as<sp/>regards<sp/>security.<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>The<sp/>fact<sp/>that<sp/>you<sp/>are<sp/>presently<sp/>reading<sp/>this<sp/>means<sp/>that<sp/>you<sp/>have<sp/>had</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>knowledge<sp/>of<sp/>the<sp/>CeCILL<sp/>license<sp/>and<sp/>that<sp/>you<sp/>accept<sp/>its<sp/>terms.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>To<sp/>report<sp/>bugs,<sp/>suggest<sp/>enhancements,<sp/>etc.<sp/>to<sp/>the<sp/>Authors,<sp/>contact</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Frederic<sp/>Dubois.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>frederic.dubois@umontpellier.fr</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*=========================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>wrap_DKJCx_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wrap_DKJCx_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="wrap__DKJCx_8h_1a48cb665173395dcc2d7dc533da4a923a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1a48cb665173395dcc2d7dc533da4a923a" kindref="member">DKJCx_SelectProxTactors</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reset=0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="wrap__DKJCx_8h_1a454ade61b93710bde7bdd438726c5448" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1a454ade61b93710bde7bdd438726c5448" kindref="member">DKJCx_SmoothForceComputation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="wrap__DKJCx_8h_1a0708b93a164dc6b88cba695d177cd584" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1a0708b93a164dc6b88cba695d177cd584" kindref="member">DKJCx_WriteLastVlocRloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="wrap__DKJCx_8h_1a1a9327254193d51560ed83d44769889c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1a1a9327254193d51560ed83d44769889c" kindref="member">DKJCx_WriteOutVlocRloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="wrap__DKJCx_8h_1a56fa78765572361e4c4a6111e6e04f3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1a56fa78765572361e4c4a6111e6e04f3e" kindref="member">DKJCx_DisplayOutVlocRloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="wrap__DKJCx_8h_1a8e79b1529676b92b5820e4e561d247f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1a8e79b1529676b92b5820e4e561d247f0" kindref="member">DKJCx_DisplayProxTactors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="wrap__DKJCx_8h_1a595af69a5b425ef804f6d8b6d82c03a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1a595af69a5b425ef804f6d8b6d82c03a1" kindref="member">DKJCx_ReadIniVlocRloc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num=0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="wrap__DKJCx_8h_1a5739dcfda52d725709106b461a63f42a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1a5739dcfda52d725709106b461a63f42a" kindref="member">DKJCx_SetSurfaceSectors</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbsect);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="wrap__DKJCx_8h_1aad0773f2b0ca417f01c94dda5ec87453" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1aad0773f2b0ca417f01c94dda5ec87453" kindref="member">DKJCx_ComputeStress</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="wrap__DKJCx_8h_1ab2c3cd67531bf5a1a2cb15dccfcc4cc9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1ab2c3cd67531bf5a1a2cb15dccfcc4cc9" kindref="member">DKJCx_CleanMemory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="wrap__DKJCx_8h_1a0ab55b3d8a0cccdb49a12d801ff173e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrap__DKJCx_8h_1a0ab55b3d8a0cccdb49a12d801ff173e6" kindref="member">DKJCx_SetFrictionModel</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>cflag);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>wrap_DKJCx_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/petras/brg/2_code/lmgc90_installation/src/ChiPy/contact_2D/wrap_DKJCx.h"/>
  </compounddef>
</doxygen>
